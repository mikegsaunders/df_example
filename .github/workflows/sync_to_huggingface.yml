name: Sync GitHub Release to Zenodo and Hugging Face

on:
  release:
    types: [published]

jobs:
  sync_zenodo_to_huggingface:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout code
      - name: Checkout code
        uses: actions/checkout@v2

      # Step 2: Wait for 5 minutes to allow Zenodo record creation
      - name: Wait for Zenodo record
        run: |
          echo "Waiting for 5 minutes to ensure Zenodo record is created..."
          sleep 120  # Sleep for 120 seconds (2 minutes)

      # Step 3: Check Zenodo for New Record
      - name: Check Zenodo for New Record
        id: zenodo_check
        run: |
          RELEASE_TAG="${{ github.ref_name }}"
          ZENODO_API_TOKEN="${{ secrets.ZENODO_API_TOKEN }}"
          ZENODO_API_URL="https://zenodo.org/api/deposit/depositions?access_token=$ZENODO_API_TOKEN"
          # Fetch records associated with the GitHub release
          RESPONSE=$(curl $ZENODO_API_URL | jq --arg release_tag "$RELEASE_TAG" '.[] | select(.metadata.version == $release_tag)')
          echo "$RESPONSE"
          # Check if Zenodo record exists
          if [[ -z "$RESPONSE" ]]; then
            echo "No Zenodo record found for this release."
            exit 1  # Fail the workflow if no Zenodo record found
          else
            echo "Zenodo record found. Proceeding with Hugging Face upload."
            # Extract download URL from Zenodo response
            ZIP_URL=$(echo "$RESPONSE" | jq -r '.files[0].links.download')
            # Adjust the URL if it contains '/draft/'
            if echo "$ZIP_URL" | grep -q '/draft/'; then
              ZIP_URL=$(echo "$ZIP_URL" | sed 's|/draft||')
            fi
            echo "Adjusted ZIP URL: $ZIP_URL"
            
            # Download the file
            curl -L "$ZIP_URL" -o dataset.zip
            unzip dataset.zip -d dataset_folder
          fi
      # Step 4: Authenticate with Hugging Face CLI
      - name: Authenticate with Hugging Face CLI
        run: |
          pip install -U "huggingface_hub[cli]"
          HF_TOKEN="${{ secrets.HF_TOKEN }}"
          huggingface-cli login --token $HF_TOKEN
      
      # Step: Upload files to Hugging Face from detected folder
      - name: Upload files to Hugging Face
        run: |
          # Identify the first subfolder in dataset_folder
          UPLOAD_FOLDER=$(find dataset_folder -mindepth 1 -maxdepth 1 -type d | head -n 1)
      
          # Ensure a folder was found
          if [ -z "$UPLOAD_FOLDER" ]; then
            echo "Error: No subfolder found in dataset_folder!"
            exit 1
          fi
      
          echo "Uploading from folder: $UPLOAD_FOLDER"
      
          # Upload each file in the detected folder
          for file in "$UPLOAD_FOLDER"/*; do
            # Ensure we skip .github (though it shouldn't exist at this stage)
            if [[ ! "$file" =~ ".github" ]]; then
              huggingface-cli upload "$file" --repo-id <YOUR_HUGGINGFACE_DATASET_REPO>
            fi
          done
